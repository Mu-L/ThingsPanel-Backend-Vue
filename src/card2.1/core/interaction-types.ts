/**
 * Card2.1 ÁªÑ‰ª∂‰∫§‰∫íÁ≥ªÁªüÁ±ªÂûãÂÆö‰πâ
 * ÂÆö‰πâÁªÑ‰ª∂Â¶Ç‰ΩïÂìçÂ∫îÂ§ñÈÉ®‰∫§‰∫íÁöÑÁ±ªÂûãÁ≥ªÁªü
 */

// ‰∫§‰∫í‰∫ã‰ª∂Á±ªÂûã
export type InteractionEventType =
  | 'click' // ÁÇπÂáª‰∫ã‰ª∂
  | 'hover' // ÊÇ¨ÂÅú‰∫ã‰ª∂
  | 'focus' // ËÅöÁÑ¶‰∫ã‰ª∂
  | 'blur' // Â§±ÁÑ¶‰∫ã‰ª∂
  | 'visibility' // üî• Êñ∞Â¢ûÔºöÊòæÁ§∫Êó∂/ÈöêËóèÊó∂‰∫ã‰ª∂
  | 'dataChange' // Êï∞ÊçÆÂèòÂåñ‰∫ã‰ª∂ÔºàÂ±ûÊÄßÊîπÂèòÊó∂Ôºâ
  | 'conditional' // Êù°‰ª∂Ëß¶Âèë‰∫ã‰ª∂
  | 'crossComponent' // Ë∑®ÁªÑ‰ª∂‰∫ã‰ª∂
  | 'custom' // Ëá™ÂÆö‰πâ‰∫ã‰ª∂

// ‰∫§‰∫íÂìçÂ∫îÂä®‰ΩúÁ±ªÂûã
export type InteractionActionType =
  | 'changeBackgroundColor' // ÊîπÂèòËÉåÊôØÈ¢úËâ≤
  | 'changeTextColor' // ÊîπÂèòÊñáÂ≠óÈ¢úËâ≤
  | 'changeBorderColor' // ÊîπÂèòËæπÊ°ÜÈ¢úËâ≤
  | 'changeSize' // ÊîπÂèòÂ§ßÂ∞è
  | 'changeOpacity' // ÊîπÂèòÈÄèÊòéÂ∫¶
  | 'changeTransform' // ÊîπÂèòÂèòÊç¢ÔºàÊóãËΩ¨„ÄÅÁº©ÊîæÁ≠âÔºâ
  | 'changeVisibility' // ÊîπÂèòÂèØËßÅÊÄß
  | 'changeContent' // ÊîπÂèòÂÜÖÂÆπ
  | 'triggerAnimation' // Ëß¶ÂèëÂä®Áîª
  | 'navigateToUrl' // Ë∑≥ËΩ¨Âà∞ÊåáÂÆöURL
  | 'updateComponentData' // ‰øÆÊîπÁõÆÊ†áÁªÑ‰ª∂Êï∞ÊçÆ
  | 'flashColor' // Èó™ÁÉÅÈ¢úËâ≤ÊïàÊûú
  | 'conditionalStyle' // Êù°‰ª∂Ê†∑ÂºèÂèòÂåñ
  | 'callFunction' // Ë∞ÉÁî®ÂáΩÊï∞
  | 'custom' // Ëá™ÂÆö‰πâÂä®‰Ωú

// ‰∫§‰∫íÂìçÂ∫îÈÖçÁΩÆ
export interface InteractionResponse {
  action: InteractionActionType
  value: any
  duration?: number // Âä®ÁîªÊåÅÁª≠Êó∂Èó¥ÔºàÊØ´ÁßíÔºâ
  easing?: string // ÁºìÂä®ÂáΩÊï∞
  delay?: number // Âª∂ËøüÊó∂Èó¥ÔºàÊØ´ÁßíÔºâ

  // URLË∑≥ËΩ¨Áõ∏ÂÖ≥Â±ûÊÄß
  target?: string // Ë∑≥ËΩ¨ÁõÆÊ†á (_self, _blank, _parent, _top)
  windowFeatures?: string // Êñ∞Á™óÂè£ÁâπÊÄßÈÖçÁΩÆ

  // Ë∑®ÁªÑ‰ª∂Êï∞ÊçÆÊõ¥Êñ∞Áõ∏ÂÖ≥Â±ûÊÄß
  targetComponentId?: string // ÁõÆÊ†áÁªÑ‰ª∂ID
  targetProperty?: string // ÁõÆÊ†áÂ±ûÊÄßÂêç
  updateValue?: any // Êõ¥Êñ∞ÂÄº
  updateMode?: 'replace' | 'append' | 'prepend' // Êõ¥Êñ∞Ê®°Âºè
}

// ‰∫§‰∫íËß¶ÂèëÁ±ªÂûã - Âå∫ÂàÜÊòØËäÇÁÇπËß¶ÂèëËøòÊòØÁªÑ‰ª∂ÂÜÖÈÉ®Ëß¶Âèë
export type InteractionTriggerType =
  | 'node' // ËäÇÁÇπÁ∫ßÂà´Ëß¶ÂèëÔºàÊï¥‰∏™ËäÇÁÇπÂìçÂ∫î‰∫ã‰ª∂Ôºâ
  | 'component' // ÁªÑ‰ª∂ÂÜÖÈÉ®Ëß¶ÂèëÔºàÁªÑ‰ª∂ÂÜÖÈÉ®ÂÖÉÁ¥†ÂìçÂ∫î‰∫ã‰ª∂Ôºâ

// ‰∫§‰∫íÈÖçÁΩÆ
export interface InteractionConfig {
  event: InteractionEventType
  responses: InteractionResponse[]
  triggerType?: InteractionTriggerType // ‰∫§‰∫íËß¶ÂèëÁ±ªÂûã
  enabled?: boolean // ÊòØÂê¶ÂêØÁî®Ê≠§‰∫§‰∫í
  priority?: number // ‰ºòÂÖàÁ∫ßÔºåÊï∞Â≠óË∂äÂ§ß‰ºòÂÖàÁ∫ßË∂äÈ´ò
  name?: string // ‰∫§‰∫íÈÖçÁΩÆÂêçÁß∞
  // Ë∑®ÁªÑ‰ª∂‰∫§‰∫íÈÖçÁΩÆ
  targetComponentId?: string // ÁõÆÊ†áÁªÑ‰ª∂IDÔºàË∑®ÁªÑ‰ª∂‰∫§‰∫íÊó∂‰ΩøÁî®Ôºâ
  // Êù°‰ª∂Ëß¶ÂèëÈÖçÁΩÆ
  condition?: ConditionConfig // Êù°‰ª∂ÈÖçÁΩÆÔºàÊù°‰ª∂Ëß¶ÂèëÊó∂‰ΩøÁî®Ôºâ
  // üî• Êï∞ÊçÆÂèòÂåñÁõëÂê¨ÈÖçÁΩÆÔºàÂ¢ûÂº∫ÁâàÔºâ
  dataPath?: string // ÁõëÂê¨ÁöÑÊï∞ÊçÆË∑ØÂæÑ
  watchedProperty?: string // Ë¢´ÁõëÂê¨ÁöÑÁªÑ‰ª∂Â±ûÊÄßÂêç
  sourceComponentType?: string // Ê∫êÁªÑ‰ª∂Á±ªÂûãÔºàÁî®‰∫éÂ±ûÊÄßÈ™åËØÅÔºâ
}

// ÁªÑ‰ª∂‰∫§‰∫íÁä∂ÊÄÅ
export interface ComponentInteractionState {
  backgroundColor?: string
  textColor?: string
  borderColor?: string
  width?: string | number
  height?: string | number
  opacity?: number
  transform?: string
  visibility?: 'visible' | 'hidden'
  content?: any
  isAnimating?: boolean
}

// ‰∫§‰∫íÁÆ°ÁêÜÂô®Êé•Âè£
export interface IInteractionManager {
  // Ê≥®ÂÜåÁªÑ‰ª∂ÁöÑ‰∫§‰∫íÈÖçÁΩÆ
  registerComponent(componentId: string, configs: InteractionResponse[]): void

  // ÁßªÈô§ÁªÑ‰ª∂ÁöÑ‰∫§‰∫íÈÖçÁΩÆ
  unregisterComponent(componentId: string): void

  // Ëß¶Âèë‰∫§‰∫í‰∫ã‰ª∂
  triggerEvent(componentId: string, event: InteractionEventType, data?: any): void

  // Ëé∑ÂèñÁªÑ‰ª∂ÁöÑ‰∫§‰∫íÁä∂ÊÄÅ
  getComponentState(componentId: string): ComponentInteractionState | undefined

  // ÈáçÁΩÆÁªÑ‰ª∂ÁöÑ‰∫§‰∫íÁä∂ÊÄÅ
  resetComponentState(componentId: string): void

  // ÊâπÈáèÊõ¥Êñ∞Â§ö‰∏™ÁªÑ‰ª∂ÁöÑ‰∫§‰∫íÈÖçÁΩÆ
  updateComponentConfigs(componentId: string, configs: InteractionResponse[]): void
}

// ‰∫§‰∫í‰∫ã‰ª∂Êï∞ÊçÆ
export interface InteractionEventData {
  source?: string // ‰∫ã‰ª∂Êù•Ê∫ê
  timestamp: Date // ‰∫ã‰ª∂Êó∂Èó¥Êà≥
  data?: any // È¢ùÂ§ñÊï∞ÊçÆ
  position?: { x: number; y: number } // ‰∫ã‰ª∂‰ΩçÁΩÆ
}

// ‰∫§‰∫íÂìçÂ∫îÁªìÊûú
export interface InteractionResponseResult {
  success: boolean
  componentId: string
  action: InteractionActionType
  oldValue?: any
  newValue?: any
  error?: string
}

// Êù°‰ª∂ÈÖçÁΩÆ
export interface ConditionConfig {
  type: 'comparison' | 'range' | 'expression' // Êù°‰ª∂Á±ªÂûã
  field?: string // ÁõëÂê¨ÁöÑÂ≠óÊÆµÂêç
  operator?: ComparisonOperator // ÊØîËæÉËøêÁÆóÁ¨¶
  value?: any // ÊØîËæÉÂÄº
  minValue?: any // ËåÉÂõ¥Êù°‰ª∂ÁöÑÊúÄÂ∞èÂÄº
  maxValue?: any // ËåÉÂõ¥Êù°‰ª∂ÁöÑÊúÄÂ§ßÂÄº
  expression?: string // Ëá™ÂÆö‰πâË°®ËææÂºè
}

// ÊØîËæÉËøêÁÆóÁ¨¶
export type ComparisonOperator =
  | 'equals' // Á≠â‰∫é (==)
  | 'notEquals' // ‰∏çÁ≠â‰∫é (!=)
  | 'greaterThan' // Â§ß‰∫é (>)
  | 'greaterThanOrEqual' // Â§ß‰∫éÁ≠â‰∫é (>=)
  | 'lessThan' // Â∞è‰∫é (<)
  | 'lessThanOrEqual' // Â∞è‰∫éÁ≠â‰∫é (<=)
  | 'contains' // ÂåÖÂê´
  | 'startsWith' // ‰ª•...ÂºÄÂßã
  | 'endsWith' // ‰ª•...ÁªìÊùü

// Êâ©Â±ïÁöÑ‰∫§‰∫íÂìçÂ∫îÈÖçÁΩÆÔºåÊîØÊåÅË∑®ÁªÑ‰ª∂Âä®‰Ωú
export interface CrossComponentResponse extends InteractionResponse {
  targetComponentId: string // ÁõÆÊ†áÁªÑ‰ª∂ID
  targetProperty?: string // ÁõÆÊ†áÂ±ûÊÄßÂêçÔºàÁî®‰∫éÊï∞ÊçÆ‰øÆÊîπÔºâ
}

// Èó™ÁÉÅÈÖçÁΩÆ
export interface FlashConfig {
  color: string // Èó™ÁÉÅÈ¢úËâ≤
  duration: number // ÊåÅÁª≠Êó∂Èó¥
  times: number // Èó™ÁÉÅÊ¨°Êï∞
}

// URLË∑≥ËΩ¨ÈÖçÁΩÆ
export interface NavigationConfig {
  url: string // ÁõÆÊ†áURL
  target?: '_blank' | '_self' | '_parent' | '_top' // ÊâìÂºÄÊñπÂºè
}

// Êï∞ÊçÆÊõ¥Êñ∞ÈÖçÁΩÆ
export interface DataUpdateConfig {
  targetProperty: string // ÁõÆÊ†áÂ±ûÊÄß
  updateValue: any // Êõ¥Êñ∞ÂÄº
  updateMode?: 'replace' | 'append' | 'prepend' // Êõ¥Êñ∞Ê®°Âºè
}
