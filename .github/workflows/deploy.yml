name: ssh deploy

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.11

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies and build
        run: |
          npm install -g pnpm@8.15.5
          pnpm i
          pnpm build

      - name: Compress build output
        run: tar -czf dist.tar.gz -C dist .

      - name: Copy file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.C_HOST }}
          username: ${{ secrets.C_USER }}
          password: ${{ secrets.C_PASS }}
          source: "dist.tar.gz"
          target: "/home/thingspanel/nginx/www/"

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.C_HOST }}
          username: ${{ secrets.C_USER }}
          password: ${{ secrets.C_PASS }}
          script: |
            echo "Starting deployment..."
            cd /home/thingspanel/nginx/www
            echo "Listing files in target directory:"
            ls -la
            # Remove dist.tar.gz if it is a directory
            if [ -d dist.tar.gz ]; then rm -rf dist.tar.gz; fi
            # Clean up old application files before deploying new ones
            rm -rf assets index.html favicon.svg
            # Extract the archive directly into the web root
            tar -xzf dist.tar.gz
            # Set correct ownership and permissions for Nginx
            chown -R root:root .
            chmod -R 755 .
            # Remove the archive file after extraction
            rm -f dist.tar.gz
            # Test nginx configuration and reload the service
            nginx -t && nginx -s reload
            echo "Deployment completed successfully."
