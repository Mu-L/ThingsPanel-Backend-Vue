name: ssh deploy-no

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.11

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # 分阶段构建：第一阶段 - 安装依赖
      - name: Install dependencies
        run: |
          npm install -g pnpm@8.15.5
          pnpm i

      # 分阶段构建：第二阶段 - 类型检查（限制内存使用）
      - name: Type check
        run: |
          NODE_OPTIONS='--max-old-space-size=3072' pnpm typecheck

      # 清理缓存以释放内存
      - name: Clear cache
        run: |
          pnpm store prune

      # 分阶段构建：第三阶段 - 生产构建（优化内存分配）
      - name: Build project
        run: |
          NODE_OPTIONS='--max-old-space-size=4096 --max-semi-space-size=128' pnpm exec cross-env VITE_SERVICE_ENV=prod vite build

      - name: Compress build output
        run: tar -czf dist.tar.gz -C dist .

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.C_HOST }}
          username: ${{ secrets.C_USER }}
          password: ${{ secrets.C_PASS }}
          source: "dist.tar.gz"
          target: "/home/thingspanel/nginx/www"
          script: |
            echo "Starting deployment..."
            cd /home/thingspanel/nginx/www
            rm -rf /home/thingspanel/nginx/www/dist/assets
            tar -xzf dist.tar.gz -C /home/thingspanel/nginx/www/dist
            rm dist.tar.gz
            nginx -t && nginx -s reload
            echo "Deployment completed successfully."
